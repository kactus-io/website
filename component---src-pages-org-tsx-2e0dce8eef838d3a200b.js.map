{"version":3,"sources":["webpack:///./src/components/logout-button.tsx","webpack:///./src/components/org/choose-org.tsx","webpack:///./src/components/org/create-org.tsx","webpack:///./src/components/org/settings.tsx","webpack:///./src/components/org/manage-org.tsx","webpack:///./src/pages/org.tsx"],"names":["LogoutButton","setUser","className","onClick","ChooseOrg","user","orgs","map","x","key","id","currentOrg","members","length","CreateOrUnlockOrg","org","setBanner","React","useState","selected","setSelected","duration","setDuration","htmlFor","type","value","name","checked","onChange","e","currentTarget","primary","enterprise","ctaLabel","Modal","children","domNode","useRef","document","createElement","useEffect","body","appendChild","current","removeChild","ReactDom","createPortal","Settings","onRedirectToStripeDashboard","buttonRef","showingSettings","setShowingSettings","ref","style","top","getClientRects","bottom","right","clientWidth","API_ROOT","process","Member","memberId","isAdmin","orgId","member","setMember","loading","setLoading","canDeleteUser","githubId","deleteUser","useCallback","githubToken","token","fetch","JSON","stringify","mode","method","then","res","ok","json","parsed","Error","message","filter","catch","err","error","isUnmounted","headers","Authorization","localStorage","Accept","status","src","avatar_url","login","ManageOrg","unlocking","setUnlocking","memberUsername","setMemberUsername","locked","valid","validEnterprise","isUserAdmin","admins","indexOf","addMember","trim","replace","concat","redirectToStripeDashboard","url","window","location","href","position","prepaidFor","placeholder","Index","useUser","banner","signupFromOrg","navigate","onClose"],"mappings":"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","file":"component---src-pages-org-tsx-2e0dce8eef838d3a200b.js","sourcesContent":["import React from 'react'\nimport { User } from '../types'\n\nimport './logout-button.css'\n\nconst LogoutButton = ({ setUser }: { setUser: (arg: User | null) => void }) => {\n  return (\n    <button className=\"cta logout\" onClick={() => setUser(null)}>\n      Logout\n    </button>\n  )\n}\n\nexport default LogoutButton\n","import React from 'react'\n\nimport { User } from '../../types'\n\nexport const ChooseOrg = ({\n  user,\n  setUser,\n}: {\n  user: User\n  setUser: (arg: User) => void\n}) => {\n  return (\n    <div className=\"centered-section\">\n      <em>You are part of multiple organizations.</em>\n      <ul>\n        {user.orgs.map(x => (\n          <li\n            key={x.id}\n            onClick={() => {\n              setUser({\n                ...user,\n                currentOrg: x,\n              })\n            }}\n          >\n            {x.id} - {x.members.length} members\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport { Checkout } from './checkout'\n\nimport { Org, User } from '../../types'\n\nexport const CreateOrUnlockOrg = ({\n  user,\n  org,\n  setBanner,\n  setUser,\n}: {\n  user: User\n  org?: Org\n  setBanner: (arg: { message: string; error?: boolean }) => void\n  setUser: (arg: User) => void\n}) => {\n  const [selected, setSelected] = React.useState<'premium' | 'enterprise'>(\n    'enterprise'\n  )\n  const [duration, setDuration] = React.useState<'year' | 'month'>('month')\n\n  return (\n    <div id=\"create-org\" className=\"centered-section\">\n      {!org ? (\n        <div>\n          <p>\n            <em>You do not have any organization yet.</em>\n          </p>\n          <p>\n            An organization allows you to centralize the licenses for the\n            designers in your team.\n          </p>\n        </div>\n      ) : null}\n      <div className=\"features\">\n        <div\n          className={selected === 'premium' ? 'plan selected' : 'plan'}\n          onClick={() => setSelected('premium')}\n        >\n          <h2>Premium</h2>\n          <h3>$4.99</h3>\n          <h4>per user per month</h4>\n          <ul>\n            <li>Unlimited public repositories</li>\n            <li>\n              No locked-in commitment: you can always generate the sketch files\n              to switch back\n            </li>\n            <li>\n              <strong>Unlimited private repositories</strong>\n            </li>\n          </ul>\n        </div>\n        <div\n          className={selected === 'enterprise' ? 'plan selected' : 'plan'}\n          onClick={() => setSelected('enterprise')}\n        >\n          <h2>Enterprise</h2>\n          <h3>$11.99</h3>\n          <h4>per user per month</h4>\n          <ul>\n            <li>Unlimited public repositories</li>\n            <li>\n              No locked-in commitment: you can always generate the sketch files\n              to switch back\n            </li>\n            <li>\n              <strong>Unlimited private repositories</strong>\n            </li>\n            <li>\n              <strong>Support single sign-on and on-premises deployment</strong>\n            </li>\n            <li>\n              <strong>\n                Support any git server (BitBucket, Gitlab, self-hosted, etc.)\n              </strong>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <div className=\"billing-duration-wrapper\">\n        <p>\n          <label htmlFor=\"monthly-billing\">\n            <input\n              type=\"radio\"\n              value=\"month\"\n              id=\"monthly-billing\"\n              name=\"duration-billing\"\n              checked={duration === 'month'}\n              onChange={e =>\n                setDuration(\n                  e.currentTarget.value === 'month' ? 'month' : 'year'\n                )\n              }\n            />\n            Monthly billing\n            <span className=\"billing-quote\">\n              {selected === 'enterprise' ? '$11.99 / month' : '$4.99 / month'}\n            </span>\n          </label>\n        </p>\n        <p>\n          <label htmlFor=\"yearly-billing\">\n            <input\n              type=\"radio\"\n              value=\"year\"\n              id=\"yearly-billing\"\n              name=\"duration-billing\"\n              checked={duration === 'year'}\n              onChange={e =>\n                setDuration(\n                  e.currentTarget.value === 'month' ? 'month' : 'year'\n                )\n              }\n            />\n            Yearly billing\n            <span id=\"yearly-billing-quote\" className=\"billing-quote\">\n              {selected === 'enterprise'\n                ? '$119.90 / year (2 months free)'\n                : '$49.90 / year (2 months free)'}\n            </span>\n          </label>\n        </p>\n      </div>\n      <Checkout\n        setUser={setUser}\n        setBanner={setBanner}\n        primary\n        enterprise={selected === 'enterprise'}\n        duration={duration}\n        user={user}\n        ctaLabel={org ? 'Unlock Organization' : 'Create an Organization'}\n        org={org}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport ReactDom from 'react-dom'\n\nimport { Org, User } from '../../types'\n\nimport './settings.css'\n\nconst Modal = ({ children }: { children: React.ReactNode }) => {\n  const domNode = React.useRef(document.createElement('div'))\n  React.useEffect(() => {\n    document.body.appendChild(domNode.current)\n\n    return () => document.body.removeChild(domNode.current)\n  }, [])\n\n  return ReactDom.createPortal(children, domNode.current)\n}\n\nexport const Settings = ({\n  user,\n  org,\n  setBanner,\n  setUser,\n  onRedirectToStripeDashboard,\n}: {\n  user: User\n  org: Org\n  setBanner: (arg: { message: string; error?: boolean }) => void\n  setUser: (arg: User) => void\n  onRedirectToStripeDashboard: () => void\n}) => {\n  const buttonRef = React.useRef<HTMLButtonElement | null>(null)\n  const [showingSettings, setShowingSettings] = React.useState(false)\n\n  return (\n    <>\n      <button\n        className=\"settings-trigger\"\n        ref={buttonRef}\n        onClick={() => setShowingSettings(true)}\n      >\n        ⚙️\n      </button>\n      {showingSettings ? (\n        <Modal>\n          <div className=\"overlay\" onClick={() => setShowingSettings(false)} />\n          <div\n            className=\"settings-wrapper\"\n            style={{\n              top: buttonRef.current\n                ? buttonRef.current.getClientRects()[0].bottom\n                : 0,\n              right: buttonRef.current\n                ? document.body.clientWidth -\n                  buttonRef.current.getClientRects()[0].right\n                : 0,\n            }}\n          >\n            <button className=\"cta\" onClick={onRedirectToStripeDashboard}>\n              Manage Subscription\n            </button>\n            <button className=\"cta\" onClick={onRedirectToStripeDashboard}>\n              Update Billing Details\n            </button>\n            <button className=\"cta\" onClick={onRedirectToStripeDashboard}>\n              Billing History\n            </button>\n          </div>\n        </Modal>\n      ) : null}\n    </>\n  )\n}\n","import React from 'react'\n\nimport { Checkout } from './checkout'\nimport { CreateOrUnlockOrg } from './create-org'\nimport { Settings } from './settings'\n\nimport { Org, User } from '../../types'\n\nconst API_ROOT = process.env.GATSBY_API_ROOT\n\nexport function isAdmin(user: User, org: Org) {\n  return org.admins.indexOf(user.githubId) !== -1\n}\n\nconst Member = ({\n  memberId,\n  user,\n  isAdmin,\n  orgId,\n  setBanner,\n  setUser,\n}: {\n  memberId: string\n  user: User\n  isAdmin: boolean\n  orgId: string\n  setBanner: (arg: { message: string; error?: boolean }) => void\n  setUser: (arg: User) => void\n}) => {\n  const [member, setMember] = React.useState<null | {\n    login: string\n    avatar_url: string\n  }>(null)\n  const [loading, setLoading] = React.useState(false)\n\n  const canDeleteUser = isAdmin && user.githubId !== memberId\n\n  const deleteUser = React.useCallback(() => {\n    setLoading(true)\n    const body = {\n      memberId,\n      githubId: user.githubId,\n      githubToken: user.token,\n      orgId,\n    }\n    fetch(`${API_ROOT}/orgs/member`, {\n      body: JSON.stringify(body),\n      mode: 'cors',\n      method: 'DELETE',\n    })\n      .then(res => {\n        if (!res.ok) {\n          return res.json().then(function(parsed) {\n            throw new Error(parsed.message)\n          })\n        }\n      })\n      .then(() => {\n        setUser({\n          ...user,\n          orgs: (user.orgs || []).map(org => {\n            if (org.id === orgId) {\n              org.members = (org.members || []).filter(x => memberId !== x)\n              return org\n            }\n            return org\n          }),\n          currentOrg: {\n            ...user.currentOrg,\n            members: (user.currentOrg.members || []).filter(\n              x => memberId !== x\n            ),\n          },\n        })\n      })\n      .catch(err => {\n        setBanner({ message: err.message, error: true })\n        setLoading(false)\n      })\n  }, [memberId])\n\n  React.useEffect(() => {\n    let isUnmounted = false\n    fetch(`https://api.github.com/user/${memberId}`, {\n      headers: {\n        Authorization: 'Token ' + localStorage.token,\n        Accept: 'application/vnd.github.v3+json',\n      },\n    })\n      .then(res => {\n        if (res.status !== 200) {\n          return res.json().then(parsed => {\n            throw new Error(parsed)\n          })\n        }\n        return res.json()\n      })\n      .then(res => {\n        if (!isUnmounted) setMember(res)\n      })\n      .catch(err => setBanner({ message: err.message, error: true }))\n    return () => {\n      isUnmounted = true\n    }\n  }, [memberId])\n\n  return (\n    <tr>\n      <td>\n        <div className=\"avatar\">\n          {member && !loading ? <img src={member.avatar_url} /> : null}\n        </div>\n      </td>\n      <td>{member && !loading ? member.login : 'Loading...'}</td>\n      <td>\n        {member && !loading && canDeleteUser ? (\n          <button className=\"remove-member cta\" onClick={deleteUser}>\n            Remove\n          </button>\n        ) : null}\n      </td>\n    </tr>\n  )\n}\n\nexport const ManageOrg = ({\n  user,\n  org,\n  setBanner,\n  setUser,\n}: {\n  user: User\n  org: Org\n  setBanner: (arg: { message: string; error?: boolean }) => void\n  setUser: (arg: User) => void\n}) => {\n  const [unlocking, setUnlocking] = React.useState(false)\n  const [loading, setLoading] = React.useState(false)\n  const [memberUsername, setMemberUsername] = React.useState('')\n\n  const locked = !org.valid && !org.validEnterprise\n  const isUserAdmin = isAdmin(user, org)\n\n  const addMember = React.useCallback(() => {\n    setLoading(true)\n    const body = {\n      memberUsername: memberUsername.trim().replace(/^@/g, ''),\n      githubId: user.githubId,\n      githubToken: user.token,\n      orgId: org.id,\n    }\n    fetch(`${API_ROOT}/orgs/member`, {\n      body: JSON.stringify(body),\n      mode: 'cors',\n      method: 'POST',\n    })\n      .then(res => {\n        if (!res.ok) {\n          return res.json().then(parsed => {\n            throw new Error(parsed.message)\n          })\n        }\n        return res.json()\n      })\n      .then(res => {\n        setUser({\n          ...user,\n          orgs: (user.orgs || []).map(x => {\n            if (org.id === x.id) {\n              x.members = (x.members || []).concat(res.memberId)\n              return x\n            }\n            return x\n          }),\n          currentOrg: {\n            ...user.currentOrg,\n            members: (user.currentOrg.members || []).concat(res.memberId),\n          },\n        })\n        setMemberUsername('')\n      })\n      .catch(err => {\n        setBanner({ message: err.message, error: true })\n        setLoading(false)\n      })\n  }, [memberUsername, user, org])\n\n  const redirectToStripeDashboard = React.useCallback(() => {\n    fetch(`${API_ROOT}/accessStripeDashboard`, {\n      body: JSON.stringify({\n        githubId: user.githubId,\n        githubToken: user.token,\n        orgId: org.id,\n      }),\n      mode: 'cors',\n      method: 'POST',\n    })\n      .then(res => {\n        if (!res.ok) {\n          return res.json().then(parsed => {\n            throw new Error(parsed.message)\n          })\n        }\n        return res.json()\n      })\n      .then(({ url }) => {\n        window.location.href = url\n      })\n      .catch(err => setBanner({ message: err.message, error: true }))\n  }, [user, org])\n\n  if (unlocking) {\n    return (\n      <CreateOrUnlockOrg\n        org={org}\n        user={user}\n        setBanner={setBanner}\n        setUser={setUser}\n      />\n    )\n  }\n\n  return (\n    <div id=\"manage-org\" style={{ position: 'relative' }}>\n      <h1>Manage your organization</h1>\n      {locked ? (\n        <div>\n          <p>Looks like the subscription is not valid anymore.</p>\n          <button className=\"cta primary\" onClick={() => setUnlocking(true)}>\n            Renew subscription\n          </button>\n        </div>\n      ) : (\n        <div>\n          {/* don't show settings for prepaid orgs */}\n          {org.prepaidFor ? null : (\n            <Settings\n              setUser={setUser}\n              setBanner={setBanner}\n              user={user}\n              org={org}\n              onRedirectToStripeDashboard={redirectToStripeDashboard}\n            />\n          )}\n\n          <fieldset>\n            <label htmlFor=\"github-username\">\n              Add a member to your organization\n            </label>\n            <input\n              type=\"text\"\n              id=\"github-username\"\n              placeholder=\"GitHub username\"\n              value={memberUsername}\n              onChange={e => setMemberUsername(e.currentTarget.value)}\n            />\n            {loading ? (\n              'Adding...'\n            ) : (\n              <button className=\"cta\" id=\"onAddMember\" onClick={addMember}>\n                Add to organization\n              </button>\n            )}\n          </fieldset>\n        </div>\n      )}\n\n      <table>\n        <tbody id=\"org-member\">\n          {org.members.map(memberId => (\n            <Member\n              setUser={setUser}\n              setBanner={setBanner}\n              key={memberId}\n              memberId={memberId}\n              orgId={org.id}\n              user={user}\n              isAdmin={isUserAdmin}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n","import React from 'react'\nimport { navigate } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport Header from '../components/header'\nimport Loader from '../components/loader'\nimport Banner from '../components/banner'\nimport LogoutButton from '../components/logout-button'\n\nimport { ChooseOrg, CreateOrUnlockOrg, ManageOrg } from '../components/org'\n\nimport useUser from '../hooks/useUser'\n\nimport './pricing.css'\nimport './org.css'\n\nconst Index = ({ location }: { location: Location }) => {\n  const [user, loading, setUser] = useUser(location)\n  const [banner, setBanner] = React.useState<{\n    message: string\n    error?: boolean\n  } | null>(null)\n\n  React.useEffect(() => {\n    if (!user && !loading) {\n      localStorage.signupFromOrg = 'true'\n      navigate('/login')\n    }\n  }, [loading])\n\n  return (\n    <Layout>\n      <SEO />\n      <Header />\n      {loading ? (\n        <Loader />\n      ) : !user ? null : (\n        <>\n          <LogoutButton setUser={setUser} />\n          {user.currentOrg ? (\n            <ManageOrg\n              setUser={setUser}\n              user={user}\n              org={user.currentOrg}\n              setBanner={setBanner}\n            />\n          ) : user.orgs && user.orgs.length ? (\n            <ChooseOrg user={user} setUser={setUser} />\n          ) : (\n            <CreateOrUnlockOrg\n              setUser={setUser}\n              user={user}\n              setBanner={setBanner}\n            />\n          )}\n        </>\n      )}\n\n      {banner ? <Banner {...banner} onClose={() => setBanner(null)} /> : null}\n\n      <hr />\n      <script src=\"https://js.stripe.com/v3/\"></script>\n    </Layout>\n  )\n}\n\nexport default Index\n"],"sourceRoot":""}