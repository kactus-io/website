{"version":3,"sources":["webpack:///./src/pages/account.tsx"],"names":["Unlock","user","setBanner","setUser","React","useState","selected","setSelected","duration","setDuration","className","onClick","htmlFor","type","value","id","name","checked","onChange","e","currentTarget","primary","enterprise","ctaLabel","checkoutTarget","CHECKOUT_TARGET","USER","Index","location","useUser","loading","banner","useEffect","navigate","goToStripe","fetch","API_ROOT","body","JSON","stringify","githubId","githubToken","token","mode","method","then","res","ok","json","parsed","Error","message","url","window","href","catch","err","error","localStorage","clear","valid","validFromOrg","validEnterprise","validEnterpriseFromOrg","orgs","length","onClose","src"],"mappings":"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","file":"component---src-pages-account-tsx-0591404331c1432ca83c.js","sourcesContent":["import React from 'react'\nimport { navigate } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport Header from '../components/header'\nimport Loader from '../components/loader'\nimport Banner from '../components/banner'\nimport { Checkout, CHECKOUT_TARGET } from '../components/org/checkout'\n\nimport useUser from '../hooks/useUser'\n\nimport { User } from '../types'\n\nimport './pricing.css'\nimport './org.css'\n\nconst API_ROOT = process.env.GATSBY_API_ROOT\n\nconst Unlock = ({\n  user,\n  setBanner,\n  setUser,\n}: {\n  user: User\n  setBanner: (arg: { message: string; error?: boolean }) => void\n  setUser: (arg: User) => void\n}) => {\n  const [selected, setSelected] = React.useState<'premium' | 'enterprise'>(\n    'enterprise'\n  )\n  const [duration, setDuration] = React.useState<'year' | 'month'>('month')\n\n  return (\n    <div className=\"centered-section\">\n      <h3>Or subscribe individually</h3>\n      <div className=\"features\">\n        <div\n          className={selected === 'premium' ? 'plan selected' : 'plan'}\n          onClick={() => setSelected('premium')}\n        >\n          <h2>Premium</h2>\n          <h3>$4.99</h3>\n          <h4>per user per month</h4>\n          <ul>\n            <li>Unlimited public repositories</li>\n            <li>\n              No locked-in commitment: you can always generate the sketch files\n              to switch back\n            </li>\n            <li>\n              <strong>Unlimited private repositories</strong>\n            </li>\n          </ul>\n        </div>\n        <div\n          className={selected === 'enterprise' ? 'plan selected' : 'plan'}\n          onClick={() => setSelected('enterprise')}\n        >\n          <h2>Enterprise</h2>\n          <h3>$11.99</h3>\n          <h4>per user per month</h4>\n          <ul>\n            <li>Unlimited public repositories</li>\n            <li>\n              No locked-in commitment: you can always generate the sketch files\n              to switch back\n            </li>\n            <li>\n              <strong>Unlimited private repositories</strong>\n            </li>\n            <li>\n              <strong>Support single sign-on and on-premises deployment</strong>\n            </li>\n            <li>\n              <strong>\n                Support any git server (BitBucket, Gitlab, self-hosted, etc.)\n              </strong>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <div className=\"billing-duration-wrapper\">\n        <p>\n          <label htmlFor=\"monthly-billing\">\n            <input\n              type=\"radio\"\n              value=\"month\"\n              id=\"monthly-billing\"\n              name=\"duration-billing\"\n              checked={duration === 'month'}\n              onChange={e =>\n                setDuration(\n                  e.currentTarget.value === 'month' ? 'month' : 'year'\n                )\n              }\n            />\n            Monthly billing\n            <span className=\"billing-quote\">\n              {selected === 'enterprise' ? '$11.99 / month' : '$4.99 / month'}\n            </span>\n          </label>\n        </p>\n        <p>\n          <label htmlFor=\"yearly-billing\">\n            <input\n              type=\"radio\"\n              value=\"year\"\n              id=\"yearly-billing\"\n              name=\"duration-billing\"\n              checked={duration === 'year'}\n              onChange={e =>\n                setDuration(\n                  e.currentTarget.value === 'month' ? 'month' : 'year'\n                )\n              }\n            />\n            Yearly billing\n            <span id=\"yearly-billing-quote\" className=\"billing-quote\">\n              {selected === 'enterprise'\n                ? '$119.90 / year (2 months free)'\n                : '$49.90 / year (2 months free)'}\n            </span>\n          </label>\n        </p>\n      </div>\n      <Checkout\n        setUser={setUser}\n        setBanner={setBanner}\n        primary\n        enterprise={selected === 'enterprise'}\n        duration={duration}\n        user={user}\n        ctaLabel={'Subscribe'}\n        checkoutTarget={CHECKOUT_TARGET.USER}\n      />\n    </div>\n  )\n}\n\nconst Index = ({ location }: { location: Location }) => {\n  const [user, loading, setUser] = useUser(location)\n  const [banner, setBanner] = React.useState<{\n    message: string\n    error?: boolean\n  } | null>(null)\n\n  React.useEffect(() => {\n    if (!user && !loading) {\n      navigate('/login')\n    }\n  }, [loading])\n\n  const goToStripe = () =>\n    fetch(`${API_ROOT}/accessStripeDashboard`, {\n      body: JSON.stringify({\n        githubId: user.githubId,\n        githubToken: user.token,\n      }),\n      mode: 'cors',\n      method: 'POST',\n    })\n      .then(res => {\n        if (!res.ok) {\n          return res.json().then(parsed => {\n            throw new Error(parsed.message)\n          })\n        }\n        return res.json()\n      })\n      .then(({ url }) => {\n        window.location.href = url\n      })\n      .catch(err => setBanner({ message: err.message, error: true }))\n\n  return (\n    <Layout>\n      <SEO />\n      <Header />\n      {loading ? (\n        <Loader />\n      ) : !user ? null : (\n        <>\n          <button\n            className=\"cta logout\"\n            onClick={() => {\n              localStorage.clear()\n              setUser(null)\n            }}\n          >\n            Logout\n          </button>\n          {(user.valid && !user.validFromOrg) ||\n          (user.validEnterprise && !user.validEnterpriseFromOrg) ? (\n            <div className=\"centered-section\">\n              <h2>\n                You are currently subscribed to the{' '}\n                {user.validEnterprise ? 'Enterprise' : 'Premium'} plan.\n              </h2>\n\n              <div>\n                <br />\n                <button className=\"cta\" onClick={goToStripe}>\n                  Manage Subscription\n                </button>\n                <br />\n                <button className=\"cta\" onClick={goToStripe}>\n                  Update Billing Details\n                </button>\n                <br />\n                <button className=\"cta\" onClick={goToStripe}>\n                  Billing History\n                </button>\n              </div>\n            </div>\n          ) : null}\n          {user.orgs && user.orgs.length ? (\n            <div className=\"centered-section\">\n              <button className=\"cta\" onClick={() => navigate('/org')}>\n                Manage your organisations\n              </button>\n            </div>\n          ) : (\n            <div className=\"centered-section\">\n              <button className=\"cta\" onClick={() => navigate('/org')}>\n                Create an organisation\n              </button>\n            </div>\n          )}\n          {!user.valid && !user.validEnterprise ? (\n            <Unlock setUser={setUser} setBanner={setBanner} user={user} />\n          ) : null}\n        </>\n      )}\n\n      {banner ? <Banner {...banner} onClose={() => setBanner(null)} /> : null}\n\n      <hr />\n      <script src=\"https://js.stripe.com/v3/\"></script>\n    </Layout>\n  )\n}\n\nexport default Index\n"],"sourceRoot":""}